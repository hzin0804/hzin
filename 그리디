[예제 3-1 거스름돈]

N=int(input()) #입력값 도출
count=0 #초기값 설정

coin_types=[500,100,50,10] #coin의 종류를 설정

for coin in coin_types:
    count += N //coin #횟수는 입력값을 coin으로 나눈 몫이 연속적으로 더해짐
    N %= coin # 입력값은 coin 종류로 나눈 나머지로 다시 셋팅

print(count) # 최종 ocunt 수

[큰 수의 법칙]

N,M,K=map(int,input().split(' '))
list1=[]
list1=list(map(int,input().split(' ')))

list1.sort() #list 정렬하면, 작은 수 부터 정렬됨
first=list1[N-1]
second=list1[N-2]

total=0 # 합계 초기값 설정
while True:
    for i in range(K): #큰 수가 더해지는 횟수
        if M==0:
            break
        total+=first
        M-=1
    if M==0:
        break
    total+=second
    M-=1

print(total)        

[수식으로 풀기]

N,M,K=map(int,input().split())
list1= list(map(int,input().split()))

list1.sort()
first=list1[N-1]
second=list1[N-2]

# 큰 수가 더해지는 횟수 계산
count=(M/(K+1))*K #나누어 떨어졌을 경우 첫번째 count만 해도 됨
count+=M%(K+1)   # 나누어 떨어지지 않는 경우 나머지만큼 큰 수를 더해야함

result=0
result+=(count)*first
result+=(M-count)*second

print(result)


[숫자카드게임]

n,m=map(int,input().split())
list1=[]

for i in range(n):
    data=map(int,input().split()) 
    min1=min(data) #해당 행에서 최솟값 min1 변수 설정
    list1.append(min1) # 최솟값 리스트에 원소로 넣기

list1.sort() #리스트 정렬 후
print(list1[n-1])# 리스트에서 가장 마지막 원소 뽑기

[답안1: min()함수 이용]

n,m = map(int,input().split())

result=0
for i in range(n):
    data=list(map(int,input().split()))  #입력값을 바로 list화 하기 **
    # 현재 줄에서 가장 작은 수 찾기
    min_value=min(data)
    # 가장 작은 수들 중에서 가장 큰 수 찾기
    result=max(result,min_value)
print(result)

[답안2: 2중 반복문 구조]

n,m= map(int,input().split())
result=0

for i in range(n):
    data=list(map(int,input().split())) #입력값 바로 list화
    min_value=10001 #최대가 10000이므로 더 큰 수를 초기값으로 설정
    
    for a in data:
        min_value=min(min_value,a) # data로 입력된 행에 각각의 원소와 min_value 중 최소값 도출
    result=max(result,min_value) # 최소값 중에서도 최대값 뽑기 두번째 for문을 벗어나야함 *
     
print(result)
